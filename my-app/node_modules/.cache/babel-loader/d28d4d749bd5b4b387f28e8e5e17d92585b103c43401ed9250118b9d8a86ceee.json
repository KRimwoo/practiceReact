{"ast":null,"code":"var _jsxFileName = \"/Users/woorimkim/my-app/src/chap12/Calculator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TemperatureInput from \"./TemperatureInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BoilingVerdict(props) {\n  if (props.celsius >= 100) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uBB3C\\uC774 \\uB053\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\uBB3C\\uC774 \\uB053\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 12\n  }, this);\n}\n_c = BoilingVerdict;\nfunction toCelsius(fahrenheit) {\n  return (fahrenheit - 32) * 5 / 9;\n}\nfunction toFahrenheit(celsius) {\n  return celsius * 9 / 5 + 32;\n}\nfunction tryConvert(temperature, convert) {\n  const input = parseFloat(temperature);\n  if (Number.isNaN(input)) {\n    return \"\";\n  }\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\nfunction Calculator(props) {\n  _s();\n  const [temperature, setTemperature] = useState(\"\");\n  const [scale, setScale] = useState(\"\");\n  const handleCelsiusChange = temperature => {\n    setTemperature(temperature);\n    setScale(\"c\");\n  };\n  const handleFahrenheitChange = temperature => {\n    setTemperature(temperature);\n    setScale(\"f\");\n  };\n  const celsius = scale === \"f\" ? tryConvert(temperature, toCelsius) : temperature;\n  const fahrenheit = scale === \"c\" ? tryConvert(temperature, toFahrenheit) : temperature;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TemperatureInput, {\n      scale: \"c\",\n      temperature: celsius,\n      onTemperatureChange: handleCelsiusChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TemperatureInput, {\n      scale: \"f\",\n      temperature: fahrenheit,\n      onTemperatureChange: handleFahrenheitChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BoilingVerdict, {\n      celsius: parseFloat(celsius)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(Calculator, \"BwBOx9T2zbsDztskisWNCbOzszY=\");\n_c2 = Calculator;\nexport default Calculator;\nvar _c, _c2;\n$RefreshReg$(_c, \"BoilingVerdict\");\n$RefreshReg$(_c2, \"Calculator\");","map":{"version":3,"names":["React","useState","TemperatureInput","BoilingVerdict","props","celsius","toCelsius","fahrenheit","toFahrenheit","tryConvert","temperature","convert","input","parseFloat","Number","isNaN","output","rounded","Math","round","toString","Calculator","setTemperature","scale","setScale","handleCelsiusChange","handleFahrenheitChange"],"sources":["/Users/woorimkim/my-app/src/chap12/Calculator.jsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport TemperatureInput from \"./TemperatureInput\";\n\nfunction BoilingVerdict(props) {\n    if (props.celsius >= 100) {\n        return <p>물이 끓습니다.</p>;\n    }\n    return <p>물이 끓지 않습니다.</p>;\n}\n\nfunction toCelsius(fahrenheit) {\n    return ((fahrenheit - 32) * 5) / 9;\n}\n\nfunction toFahrenheit(celsius) {\n    return (celsius * 9) / 5 + 32;\n}\n\nfunction tryConvert(temperature, convert) {\n    const input = parseFloat(temperature);\n    if (Number.isNaN(input)) {\n        return \"\";\n    }\n    const output = convert(input);\n    const rounded = Math.round(output * 1000) / 1000;\n    return rounded.toString();\n}\n\nfunction Calculator(props) {\n    const [temperature, setTemperature] = useState(\"\");\n    const [scale, setScale] = useState(\"\");\n\n    const handleCelsiusChange = (temperature) => {\n        setTemperature(temperature);\n        setScale(\"c\");\n    };\n\n    const handleFahrenheitChange = (temperature) => {\n        setTemperature(temperature);\n        setScale(\"f\");\n    };\n\n    const celsius =\n        scale === \"f\" ? tryConvert(temperature, toCelsius) : temperature;\n    const fahrenheit = \n        scale === \"c\" ? tryConvert(temperature, toFahrenheit) : temperature;\n\n    return (\n        <div>\n            <TemperatureInput\n                scale=\"c\"\n                temperature={celsius}\n                onTemperatureChange={handleCelsiusChange}\n            />\n            <TemperatureInput\n                scale=\"f\"\n                temperature={fahrenheit}\n                onTemperatureChange={handleFahrenheitChange}\n            />\n            <BoilingVerdict celsius={parseFloat(celsius)} />\n        </div>\n    );\n}\n\nexport default Calculator;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,gBAAgB,MAAM,oBAAoB;AAAC;AAElD,SAASC,cAAc,CAACC,KAAK,EAAE;EAC3B,IAAIA,KAAK,CAACC,OAAO,IAAI,GAAG,EAAE;IACtB,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAe;EAC1B;EACA,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAkB;AAC7B;AAAC,KALQF,cAAc;AAOvB,SAASG,SAAS,CAACC,UAAU,EAAE;EAC3B,OAAQ,CAACA,UAAU,GAAG,EAAE,IAAI,CAAC,GAAI,CAAC;AACtC;AAEA,SAASC,YAAY,CAACH,OAAO,EAAE;EAC3B,OAAQA,OAAO,GAAG,CAAC,GAAI,CAAC,GAAG,EAAE;AACjC;AAEA,SAASI,UAAU,CAACC,WAAW,EAAEC,OAAO,EAAE;EACtC,MAAMC,KAAK,GAAGC,UAAU,CAACH,WAAW,CAAC;EACrC,IAAII,MAAM,CAACC,KAAK,CAACH,KAAK,CAAC,EAAE;IACrB,OAAO,EAAE;EACb;EACA,MAAMI,MAAM,GAAGL,OAAO,CAACC,KAAK,CAAC;EAC7B,MAAMK,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,MAAM,GAAG,IAAI,CAAC,GAAG,IAAI;EAChD,OAAOC,OAAO,CAACG,QAAQ,EAAE;AAC7B;AAEA,SAASC,UAAU,CAACjB,KAAK,EAAE;EAAA;EACvB,MAAM,CAACM,WAAW,EAAEY,cAAc,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMwB,mBAAmB,GAAIf,WAAW,IAAK;IACzCY,cAAc,CAACZ,WAAW,CAAC;IAC3Bc,QAAQ,CAAC,GAAG,CAAC;EACjB,CAAC;EAED,MAAME,sBAAsB,GAAIhB,WAAW,IAAK;IAC5CY,cAAc,CAACZ,WAAW,CAAC;IAC3Bc,QAAQ,CAAC,GAAG,CAAC;EACjB,CAAC;EAED,MAAMnB,OAAO,GACTkB,KAAK,KAAK,GAAG,GAAGd,UAAU,CAACC,WAAW,EAAEJ,SAAS,CAAC,GAAGI,WAAW;EACpE,MAAMH,UAAU,GACZgB,KAAK,KAAK,GAAG,GAAGd,UAAU,CAACC,WAAW,EAAEF,YAAY,CAAC,GAAGE,WAAW;EAEvE,oBACI;IAAA,wBACI,QAAC,gBAAgB;MACb,KAAK,EAAC,GAAG;MACT,WAAW,EAAEL,OAAQ;MACrB,mBAAmB,EAAEoB;IAAoB;MAAA;MAAA;MAAA;IAAA,QAC3C,eACF,QAAC,gBAAgB;MACb,KAAK,EAAC,GAAG;MACT,WAAW,EAAElB,UAAW;MACxB,mBAAmB,EAAEmB;IAAuB;MAAA;MAAA;MAAA;IAAA,QAC9C,eACF,QAAC,cAAc;MAAC,OAAO,EAAEb,UAAU,CAACR,OAAO;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC9C;AAEd;AAAC,GAlCQgB,UAAU;AAAA,MAAVA,UAAU;AAoCnB,eAAeA,UAAU;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}